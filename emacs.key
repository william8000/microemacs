		Default Key Bindings for MicroEMACS 3.9	(7/10/07)
		=======================================

 ^A   Move to start of line           ESC A   Apropos (list some commands)
 ^B   Move backward by characters     ESC B   Backup by words
 ^C   Insert space                    ESC C   Initial capitalize word
 ^D   Forward delete                  ESC D   Delete forward word
 ^E   Goto end of line                ESC E   Reset Encryption Key
 ^F   Move forward by characters      ESC F   Advance by words
 ^G   Abort out of things             ESC G   Go to a line
 ^H   Backward delete                 
 ^I   Insert tab/Set tab stops
 ^J   Insert CR-LF, then indent       ESC J   Fill current paragraph
 ^K   Kill forward                    ESC K   Bind Key to function
 ^L   Refresh the screen              ESC L   Lower case word
 ^M   Insert CR-LF                    ESC M   Add global mode
 ^N   Move forward by lines           ESC N   Goto End paragraph
 ^O   Open up a blank line            
 ^P   Move backward by lines          ESC P   Goto Beginning of paragraph
 ^Q   Insert literal                  ESC Q   Fill current paragraph
 ^R   Search backwards                ESC R   Search and replace
 ^S   Search forward                  ESC S   Suspend MicroEMACS (VMS&BSD only)
 ^T   Transpose characters
 ^U   Repeat command four times       ESC U   Upper case word
 ^V   Move forward by pages           ESC V   Move backward by pages
 ^W   Kill region                     ESC W   Copy region to kill buffer
 ^Y   Yank back from killbuffer       ESC X   Execute named command
 ^Z   Move backward by pages          ESC Z   Save all buffers and exit
 ^@   Set mark

 ESC ^B   Goto matching fence
 ESC ^C   Count words in region
 ESC ^E   Execute a procedure
 ESC ^F   Goto matching fence         ESC !   Reposition window
 ESC ^H   Delete backward word        ESC <   Move to start of buffer
 ESC ^K   Unbind Key from function    ESC >   Move to end of buffer
 ESC ^L   Reposition window           ESC .   Set mark
 ESC ^M   Delete global mode          ESC ?   Fetch HELP file to buffer
 ESC ^N   Rename current buffer       ESC SPACE    Set mark
 ESC ^R   Search & replace w/query    ESC DELETE   Delete backward word
 ESC ^S   Change screen rows          DELETE  Backward delete
 ESC ^T   Change screen columns
 ESC ^V   Scroll next window down
 ESC ^W   Delete Paragraph
 ESC ^X   Execute a command line
 ESC ^Z   Scroll next window up

 ESC +    Compose the next two typed characters
 ESC '    Compose the character to the left and an acute accent
 ESC _     " bar
 ESC ,     " cedilla
 ESC ^     " circumflex
 ESC `     " grave accent
 ESC /     " slash
 ESC ~     " tilde
 ESC "     " umlaut
 ESC *     " ring, also composes some graphic characters
 ESC =    Unquote a quoted-printable =XX character sequence
 ESC ;    Unprefix a two-byte sequence starting with xC3

 ^X ?   Describe a key             ^X !   Run 1 command in a subjob
 ^X =   Show the cursor position   ^X @   Pipe DOS command to buffer
 ^X ^   Enlarge display window     ^X #   Filter buffer thru DOS filter
 ^X 0   Delete current window      ^X $   Run 1 command in a subjob
 ^X 1   Delete other windows       ^X %   Filter buffer to a new buffer
 ^X 2   Split current window       ^X SPACE	Remove mark
 ^X 4   Find file into another window
 ^X 5   View file into another window
 ^X 6	Find buffer into another window
 ^X (   Begin macro		   ^X <   Narrow buffer to region
 ^X )   End macro		   ^X >   Widen buffer

 ^X ^A   Append file		   ^X A   Set variable value
 ^X ^B	 Display buffer list	   ^X B   Switch a window to a buffer
 ^X ^C	 Exit MicroEMACS	   ^X C   Start a new command processor
 ^X ^D	 Detab a line		   ^X D   Delete current window
 ^X ^E	 Entab a line		   ^X E   Execute macro
 ^X ^F	 Find file		   ^X F   Set fill column
				   ^X G   Display a variable
 ^X ^I	 Insert file
				   ^X K   Delete buffer
 ^X ^L	 Lower case region
 ^X ^M	 Delete Mode		   ^X M   Add a mode
 ^X ^N   Move window down          ^X N   Rename current filename
 ^X ^O   Delete blank lines        ^X O   Move to the next window
 ^X ^P   Move window up            ^X P   Move to the previous window
 ^X ^R   Get a file from disk      ^X R   Incremental reverse search
 ^X ^S   Save current file         ^X S   Incremental forward search
 ^X ^T   Trim whitespace on a line
 ^X ^U   Upper case region
 ^X ^V   View file
 ^X ^W   Write a file to disk      ^X W   Resize window
 ^X ^X   Swap "." and mark         ^X X   Use next buffer
 ^X ^Z   Shrink window             ^X Z   Enlarge display window

Only under PCDOS:
 <ALT>-S Hunt forward        SHIFT <F1> - <F10>
 <ALT>-R Hunt backward           Execute macros 1 - 10

Some unbound commands:
======================
append-and-copy-region	append region to kill buffer
append-and-kill-region	kill region and append it to the kill buffer
append-region		append region to a file
auto-save-all		auto-save all buffers
case-region-change	change the case in a region
clear-mark		clear the mark
character-to-octal-insert insert a C octal escape sequence for next key pressed
describe-bindings	pull the list of current bindings into a window
describe-functions	pull the list of function names into a window
describe-variables	pull the list of variables into a window
execute-buffer		execute a buffer of command lines
execute-command-line	execute a command line (n <command> <args>)
execute-file		execute a file of command lines
execute-macro-[1-40]	execute macros 1 thru 40
execute-named-command	execute a command by name (w/command completion)
hunt-backward		find last occurrence of search string
hunt-forward		find next occurrence of search string
pop-buffer		pop up a buffer
quick-save		save all changes buffers
revert-file		replaces the current file with the last saved version
show-files		show files in a directory
string-length		show length of string
write-region		write the region to a file

Usable Modes
============
WRAP     Lines going past right margin "wrap" to a new line
CMODE    Change behavior of some commands to work with C better
EXACT    Exact case matching on search strings
VIEW     Read-Only mode where no modifications are allowed
OVER     Overwrite typed characters instead of inserting them
MAGIC    Use regular expression matching in searches
CRYPT    Current buffer will be encrypted on write, decrypted on read
ASAVE    Automatically write file after $asave changes
BINARY   Read and write binary files under MSDOS

WHITE/CYAN/MAGENTA/YELLOW/BLUE/RED/GREEN/BLACK	Sets foreground color
white/cyan/magenta/yellow/blue/red/green/black	Sets background color

MAGIC MODE special characters
=============================
^	Anchor search at beginning of line
$	Anchor search at end of line
.	Match any character except <NL>
*	Match zero or more of the preceding character
+	Match one or more of the preceding character
?	Match zero or one of the preceding character
[]	Match a class of characters ([a-z] would be all alphabetics, ^ negates)
\	Take next literally
&	Matched pattern (replacement string only)

System Environment Variables (precede with $)
=============================================
fillcol		current fill column
pagelen		number of lines used by editor
curcol		current column pos of cursor
curline		current line in file
ram		ram in use by malloc
flicker		flicker suppression
curwidth	current screen width
cbufname	current buffer name
cfname		current file name
sres		current screen resolution
		under MSDOS:
		CGA	 80x25	CGA40	 40x25	MONO	 80x25
		EGA	 80x43	VGA	 80x50	VGA12	 80x12
		VGA132	132x25					(ATI or Tseng)
				VGA44	132x44			(ATI)
				TLVGA44	132x44			(Tseng)
		VGA43	132x43					(nonstandard)
		TVGA132	132x25	TVGA44	132x44	TVGA60	132x60	(Trident)
		V7VGA132 132x25	V7VGA43	132x43			(Video 7)
		GVGA132	132x25	GVGA44	132x44	GVGA60	132x60	(Genoa)
		PVGA132	132x25	PVGA43	132x43			(Paradise)
		CVGA132	132x25	CVGA50	132x50			(Chips&Tech)
debug		macro debugging
status		returns the status of the last command
palette		current palette string
asave		# of chars between auto-saves
acount		# of chars until next auto-save
lastkey		last keyboard char struck
curchar		current character under the cursor
discmd		display commands on command line
version		current version number
progname	returns current prog name - "MicroEMACS"
seed		current random number seed
disinp		display command line input characters
wline		# of lines in current window
cwline		current screen line in window
target		target for line moves
search		search pattern
replace		replacement pattern
match		last matched magic pattern
kill		kill buffer (read only)
cmode		mode of current buffer
gmode		global modes
tpause		length to pause for paren matching
pending		type ahead pending flag
lwidth		width of current line
line		text of current line
advance		EDT emulation advance/backup flag
vt100key	when set, the next character after an escape is always read
hardtab		the amount that a TAB character should move
softtab		the size for the insert-tab command
hscroll		horizontal scrolling
hjump		number of spaces to jump during a horizontal scroll
cbflags		flags for the current buffer (invis, changed, trunc, narrow)
ndate		the current date as a number in YYYYMMDD format
curwind		the number of the current window
numwind		the number of windows
disphigh	display chars with their high bit set with ^!
wchars		defines characters that make up words
yankpnt		sets the location of the point after a yank
popflag		enables pop up windows for commands
cpopflag	enables pop up windows during command completion
gfcolor		global foreground color (set to WHITE/white/CYAN/cyan/etc.)
gbcolor		global background color
cfcolor		foreground color of current window
cbcolor		background color of current window
bfcolor		foreground color of window border (when applicable)
bbcolor		background color of window border (")
sfcolor		foreground color of window shadow (")
sbcolor		background color of window shadow (")
wintitle	title of window			  (")
numcols		number of columns on screen
numrows		number of rows on screen
cindtype	c indent type (0=copy, 1=detab, 2=entab)
pid		process id
dispseven	display accented characters with 7-bit sequences in braces

Macro Functions (precede with &)
================================
add	add two numbers together
sub	subtraction
tim	multiplication
div	division
mod	mod
neg	negate
cat	concatenate string
lef	left string(string, len)
rig	right string(string, pos)
mid	mid string(string, pos, len)
not	logical not
equ	logical equality check
les	logical less than
gre	logical greater than
seq	string logical equality check
sle	string logical less than
sgr	string logical greater than
ind	evaluate indirect value
and	logical and
or	logical or
len	string length
upp	uppercase string
low	lower case string
tru	Truth of the universe logical test
asc	char to integer conversion
chr	integer to char conversion
gtk	1 character
rnd	get a random number
abs	absolute value of a number
sin	find the index of one string in another
env	retrieve a system environment var
bin	lookup what function name is bound to a key
gtc	get a command
ban	binary and
bor	binary or
bxo	binary xor
bno	binary not
isn	test for a number

Command line options
====================
-c		clears VIEW mode
-e		clears VIEW mode
-g<#>		goto line number <#> (no space between g and number)
-i<var> <value>	initialize variable <var> to value <value>
-k<key>		set encryption key to <key>
-r		set restricted flag
-s<pat>		goto first occurrence of pattern <pat>
-v		set VIEW mode
-2		start with two windows
-@<name>	use start up file <name>
-@-		do not use a start up file
-t[f][s][r][c][n][g[n,][b[l][r][t][b],][d[l][r][t][b],][s[l][r][t][b],]#,#,#,#
		special terminal options, must be combined in one string
 -tf		use flow control
 -ts		do not use vt100 scrolling regions
 -tr		do not use reverse video
 -tc		do not use color
 -tn		send termcap nulls (off by default)
 -tgn		do not make a border
 -tgb....	make a single line border on the left, right, top or bottom
 -tgd....	make a double line border on the left, right, top or bottom
 -tgs....	make a shadow on the left, right, top or bottom
 -tg#,#,#,#	initial window location row, col, length, width
